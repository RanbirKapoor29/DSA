#include <stdio.h>
#include <stdbool.h>

#define MAX_VERTICES 100

// Function to perform DFS recursively
void DFS(int graph[MAX_VERTICES][MAX_VERTICES], int n, int vertex, bool visited[MAX_VERTICES]) {
    visited[vertex] = true;
    printf("%c ", 'A' + vertex); // Print the current vertex as a letter

    for (int i = 0; i < n; i++) {
        if (graph[vertex][i] == 1 && !visited[i]) {
            DFS(graph, n, i, visited); // Recursive call
        }
    }
}

int main() {
    // Example adjacency matrix for the graph
    int graph[MAX_VERTICES][MAX_VERTICES] = {
        {0, 1, 1, 0, 0},
        {1, 0, 1, 1, 0},
        {1, 1, 0, 1, 1},
        {0, 1, 1, 0, 1},
        {0, 0, 1, 1, 0}
    };

    int n = 5; // Number of vertices in the graph
    bool visited[MAX_VERTICES] = {false}; // Visited array
    int startVertex = 0; // Starting from vertex 0 (A)

    printf("Depth-First Search starting from vertex %c: \n", 'A' + startVertex);
    DFS(graph, n, startVertex, visited);

    printf("\n");
    return 0;
}
