#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char id[5];
    int deadline;
    int profit;
} Job;

// Sort jobs in descending order of profit
int compare(const void *a, const void *b) {
    return ((Job *)b)->profit - ((Job *)a)->profit;
}

void jobSequencing(Job jobs[], int n) {
    qsort(jobs, n, sizeof(Job), compare);

    int maxDeadline = 0;
    for (int i = 0; i < n; i++) {
        if (jobs[i].deadline > maxDeadline)
            maxDeadline = jobs[i].deadline;
    }

    int slots[maxDeadline + 1];
    memset(slots, -1, sizeof(slots));

    int totalProfit = 0;
    printf("\nScheduled Jobs: ");

    for (int i = 0; i < n; i++) {
        for (int j = jobs[i].deadline; j > 0; j--) {
            if (slots[j] == -1) {
                slots[j] = i;
                printf("%s ", jobs[i].id);
                totalProfit += jobs[i].profit;
                break;
            }
        }
    }

    printf("\nTotal Profit: %d\n", totalProfit);
}

int main() {
    Job jobs[] = {
        {"j1", 2, 60},
        {"j2", 1, 100},
        {"j3", 3, 20},
        {"j4", 2, 40},
        {"j5", 1, 20}
    };

    int n = sizeof(jobs) / sizeof(jobs[0]);
    jobSequencing(jobs, n);

    return 0;
}
