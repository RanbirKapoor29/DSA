#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char id[5];
    int deadline, profit;
} Job;

int compare(const void *a, const void *b) {
    return ((Job *)b)->profit - ((Job *)a)->profit;
}

void jobSequencing(Job jobs[], int n) {
    qsort(jobs, n, sizeof(Job), compare);
    int maxProfit = 0, dmax = 0;
    
    for (int i = 0; i < n; i++)
        if (jobs[i].deadline > dmax) dmax = jobs[i].deadline;
    
    int timeslot[dmax + 1];
    memset(timeslot, -1, sizeof(timeslot));
    
    printf("\nRequired Jobs: ");
    for (int i = 0, filled = 0; i < n && filled < dmax; i++) {
        for (int k = jobs[i].deadline; k > 0; k--) {
            if (timeslot[k] == -1) {
                timeslot[k] = i;
                printf("%s%s", jobs[i].id, (filled++ < dmax - 1) ? " --> " : "");
                maxProfit += jobs[i].profit;
                break;
            }
        }
    }
    printf("\nMax Profit: %d\n", maxProfit);
}

int main() {
    Job jobs[] = { 
    {"j1", 2, 60},
    {"j2", 1, 100},
    {"j3", 3, 20},
    {"j4", 2, 40}, 
    {"j5", 1, 20} 
    };
    jobSequencing(jobs, sizeof(jobs) / sizeof(jobs[0]));
    return 0;
}
